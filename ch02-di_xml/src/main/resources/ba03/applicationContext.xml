<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">



    <!--
    声明Student对象
    注入就是赋值
    简单类型：spring规定 java的基本数据类型和字符串都是简单类型 包括基本类型的包装类
        di 给属性赋值
        1.set注入 （设值注入）：spring调用类的set方法，你可以在set方法中完成属性赋值
          如果类的属性没有set方法，那就会报错
          1）简单类型的set注入
          <bean id ="xx" class="xx">
            <property name = "属性名" value = "此属性的值"/> 一个property只对应一个属性
            <property........./>
          </bean>

          2)应用类型的set注入，同样是调用类的set方法
          <bean id ="xx" class="xx">
            <property name = "属性名" ref = "bean的id(对象的名称)"/> 一个property只对应一个属性
            <property........./>
          </bean>

        2.构造注入，spring调用类的有参构造方法，在构造方法中给属性赋值
          构造注入要使用<constructor-arg>标签，一个 <constructor-arg>表示一个参数
          <constructor-arg>有属性
            name:表示构造方法的形参名
            index：表示构造方法的参数的位置，参数从左往右位置是012的顺序
            value：如果构造方法形参类型是简单类型的，使用value
            ref：如果形参是引用类型，使用ref
    -->
    <!--使用name实现-->
    <bean id="myStudent" class="com.reiuy.ba03.Student">
        <constructor-arg name="myname" value="牛犇"/>
        <constructor-arg name="myage" value="20"/>
        <constructor-arg name="myschool" ref="mySchool"/>
    </bean>

    <!--使用index属性-->
    <bean id="myStudent2" class="com.reiuy.ba03.Student">
        <constructor-arg index="0" value="石子怡"/>
        <constructor-arg index="1" value="20"/>
        <constructor-arg index="2" ref="mySchool"/>
        <!--严格意义上，无论name还是index不需要按位置顺序排列，因为已经确定了位置，但仍然建议按顺序-->
        <!--如果严格遵循了index顺序为012的赋值，那么index可以被省去，但是并不推荐这样做-->
    </bean>



    <bean id="mySchool" class="com.reiuy.ba03.School">
        <property name="name" value="XATU"/>
        <property name="address" value="xi'an"/>
    </bean>
    <!--不需要担心引用关系的先后，不需要先school后student的关系-->


    <bean id="myFile" class="java.io.File">
        <constructor-arg name="parent" value="D:\Javaweb"/>
        <constructor-arg name="child" value="test.txt"/>

    </bean>





</beans>