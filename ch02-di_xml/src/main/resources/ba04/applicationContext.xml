<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--
        引用类型的自动注入：spring框架根据某些规则可以给引用类型赋值
        不用开发人员来给引用类型赋值
        使用的规则是byName 和byType
        1.byName java类中引用类型的属性名和spring容器中（也就是配置文件中）某个<bean>的名称一样，
                 且数据类型一致，这样的容器中的bean，spring能够赋值给引用类型
           语法规则：
           <bean id="xx" class="yy" autowire="byName>
            简单类型属性的手动赋值
           </bean>

        2.byType java类中引用类型的数据类型和spring容器中（也就是配置文件中）某个<bean>的
                 class属性是同源关系的，这样的容器中的bean，spring能够赋值给引用类型
           同源就是一类的意思：分三种
                1.java类中引用类型的数据类型和bean的class的值是一样的
                2.java类中引用类型的数据类型和bean的class的值是父子类关系的
                3.java类中引用类型的数据类型和bean的class的值是接口和实现类关系的
           语法规则：
           <bean id="xx" class="yy" autowire="byType>
            简单类型属性的手动赋值
           </bean>

    -->

    <!--实现byName-->
    <bean id="myStudent" class="com.reiuy.ba04.Student" autowire="byName">
        <property name="name" value="马哲"/>
        <property name="age" value="20"/>
        <!--此处就不需要对引用的school进行赋值了-->
    </bean>
    <!--因为是byName，且Student类型中规定的属性名为school，所以此处id需改成一致的school才可以顺利赋值-->
    <bean id="school" class="com.reiuy.ba04.School">
        <property name="name" value="XATU"/>
        <property name="address" value="xi'an"/>
    </bean>



</beans>